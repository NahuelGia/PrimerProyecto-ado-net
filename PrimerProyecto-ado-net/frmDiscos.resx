<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbTapa.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAADlQTFRF8/T2
        ub7KtrvIzdHZ1djf6Oru8PH04uTpxcnTvsLN3+Hnur/L2Nvh9vf48vT27u/yyc7WwsfR0dbcvzTBCAAA
        Aw5JREFUeF7t2+liojAYhWEWA4Ig0Pu/2JIQkb0Cafky8z7/QIfmzIlsSgAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAALCsdM1uV4pEFbFbRZrYbYuQ3iP36lROj0X4O3K7/cvldkDuCYlYZXY87mX2T1yrzKNu
        OPbj44bdZC7ho1jWZjCP2u4E3eg2GtYiEppJGt3sYcyVm6nxLuGQYROmdtGVbu6LSBiQ8BgS/qWlhJVS
        J8cmOmEam2NjU1R2xRGCEz6/QjO4dl1z4txZbsLkbvNpUWHX7ic34dcgYHumo+zq3cQm7Ab2lh0dotSE
        5V0vDB09d5aaUE0qDKPYrN9PasLpJA3DZnOM6ztboQnLYpYw2zooxus7W6kJu2ueoa2Eer9brLT4L8zS
        Z6zfvNai1ITVNOH6nub5OnIutyg1YdnohaG122WJaVBbblFqwtmdxbVJ2k1Ra6lFsQnb3aNe7K0cDpLY
        vm4stSg3YdAMI67sRkYNavMWBSes2qtDvaaV9SvHxg0as/8KwQmDMo0zfU+3uVXLU3TWoDZtUXLCVqWU
        qtYGt9CgNmlReMItiw1q4xb9TZiML5GHRhH9TbjWoDacqL4m7E/Vlg1a9DXhVoPau0VPElaTG1HbDWp9
        i34kVI9MDfce9Y8B3y36kLBUWRg17wvgHz6DL7ZFHxKqh17/bvGTBltRd70lP6Fu0LzQ2HO3zxps/8HN
        vF9+QtOgecW0+Pywwfb93TSVnvDVoGZa/LRBbxL2DRqZ+uk4OOBFwmGDxmRxkxcJxw3u5EHCWYP7eJDw
        VIMeJDzZoAcJTzYoPuHpBsUnPN2g9ITl56cuq4QnnH9/uBsJL0DCnUh4ARLu9B8klH2fRn+tdlZ3/1Fq
        QndI+JdIeIh9XkxEQvtUUOz2SWD7Pdzd/pFLvX4W/CvPrsXmyHG1bj61NbpkN+n6031MMvu1njMyniEN
        gvT8rYtlDxkVtvL+d14uRULmqKFq/Tsvtx716Bvyy6n85lYhqEAAAAAAAAAAAAAAAAAAAAAAAAAAAADg
        AkHwDS0yN9EuyIneAAAAAElFTkSuQmCC
</value>
  </data>
</root>